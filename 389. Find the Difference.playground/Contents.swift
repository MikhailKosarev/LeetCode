/*
 https://leetcode.com/problems/find-the-difference/
 389. Find the Difference
 Easy

 You are given two strings s and t.
 String t is generated by random shuffling string s and then add one more letter at a random position.
 Return the letter that was added to t.

 Example 1:
 Input: s = "abcd", t = "abcde"
 Output: "e"
 Explanation: 'e' is the letter that was added.
 
 Example 2:
 Input: s = "", t = "y"
 Output: "y"

 Constraints:
 0 <= s.length <= 1000
 t.length == s.length + 1
 s and t consist of lowercase English letters.
 */

class Solution {
    // straight solution with hash table
    // time complexity = O(2n)
    func findTheDifference(_ s: String, _ t: String) -> Character {
        // define an empty hash table
        var hashTable = [Character: Int]()
        // fill the hash table with characters from string "s"
        s.forEach {
            hashTable[$0, default: 0] += 1
        }
        // iterate the characters from string "t"
        for char in t {
            // check if current character is in the hash table
            guard let count = hashTable[char],
                  // and ciunt of this characters in the hash table is bigger than 0
                  count > 0 else {
                // otherwise return character as a result of function
                return char
            }
            // otherwise increment the count of this character in the hash table
            hashTable[char] = count - 1
        }
        // it won't be run
        return " "
    }
    
    // bitwise solution
    // time complexity = O(n)
    func findTheDifferenceBitwise(_ s: String, _ t: String) -> Character {
        var res = s.unicodeScalars.reduce(0) { $0 ^ $1.value }
        res = t.unicodeScalars.reduce(res) { $0 ^ $1.value }
        return Character(UnicodeScalar(res)!)
    }
}

let solution = Solution()
let s = "abcd", t = "abcde"
solution.findTheDifference(s, t)
solution.findTheDifferenceBitwise(s, t)
